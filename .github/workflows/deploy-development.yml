name: DEV deployment to server

on:
  push:
    branches: [ development ]
  workflow_dispatch:    

jobs:
  build_projects:
    name: Release build and tests
    environment: DEV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set script permissions
        run: chmod +x ./build-all.sh     

      - name: Build projects
        run: ./build-all.sh 
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage-reports
          path: |
            **/coverage/*
            !**/node_modules/**
            
      - name: Prepare deployment package
        env:
          DEPLOYMENT_HOST: ${{ vars.DEPLOYMENT_HOST }}
          HTTPS_CERT_EMAIL: ${{ vars.HTTPS_CERT_EMAIL }}      
        run: ./devops/package.sh

      - name: Save deployment package
        uses: actions/upload-artifact@v3
        with:
          name: deployment-package
          path: ./devops/package.tar.gz

  sonarcloud_scan:
    name: Sonar Cloud quality gate
    environment: DEV
    runs-on: ubuntu-latest
    needs: [ build_projects ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0        # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download coverage reports
        uses: actions/download-artifact@v3
        with:
          name: coverage-reports

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy to target server
    environment: DEV    
    runs-on: ubuntu-latest
    needs: [ sonarcloud_scan ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download deployment package
        uses: actions/download-artifact@v3
        with:
          name: deployment-package
          path: ./

      - name: Set script permissions
        run: chmod +x ./devops/push-package.sh

      - name: Transfer and deploy on server
        run: ./devops/push-package.sh
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER: ${{ secrets.SSH_USERNAME }}
          SSH_HOST: ${{ secrets.SSH_HOST }}